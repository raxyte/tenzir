"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88998],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>c});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},s="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(a),k=r,c=s["".concat(p,".").concat(k)]||s[k]||g[k]||i;return a?n.createElement(c,l(l({ref:e},m),{},{components:a})):n.createElement(c,l({ref:e},m))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},28088:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>f,contentTitle:()=>u,default:()=>w,frontMatter:()=>c,metadata:()=>N,toc:()=>h});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(t,e,a)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,s=(t,e)=>{for(var a in e||(e={}))p.call(e,a)&&m(t,a,e[a]);if(o)for(var a of o(e))d.call(e,a)&&m(t,a,e[a]);return t},g=(t,e)=>i(t,l(e)),k=(t,e)=>{var a={};for(var n in t)p.call(t,n)&&e.indexOf(n)<0&&(a[n]=t[n]);if(null!=t&&o)for(var n of o(t))e.indexOf(n)<0&&d.call(t,n)&&(a[n]=t[n]);return a};const c={},u="TQL2 Migration",N={unversionedId:"tql2-migration",id:"version-v4.19/tql2-migration",title:"TQL2 Migration",description:"This page answers the most frequently asked questions about TQL2.",source:"@site/versioned_docs/version-v4.19/tql2-migration.md",sourceDirName:".",slug:"/tql2-migration",permalink:"/tql2-migration",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.19/tql2-migration.md",tags:[],version:"v4.19",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Troubleshooting",permalink:"/troubleshooting"},next:{title:"Language",permalink:"/language"}},f={},h=[{value:"What is TQL2?",id:"what-is-tql2",level:3},{value:"How do I use TQL2?",id:"how-do-i-use-tql2",level:3},{value:"Why create an all-new language?",id:"why-create-an-all-new-language",level:3},{value:"Can I mix-and-match TQL1 and TQL2?",id:"can-i-mix-and-match-tql1-and-tql2",level:3},{value:"Where can I find the TQL2 reference?",id:"where-can-i-find-the-tql2-reference",level:3},{value:"When should I upgrade?",id:"when-should-i-upgrade",level:3},{value:"Where can I give feedback about TQL2?",id:"where-can-i-give-feedback-about-tql2",level:3},{value:"What features does TQL2 currently support?",id:"what-features-does-tql2-currently-support",level:3}],y={toc:h},b="wrapper";function w(t){var e=t,{components:a}=e,r=k(e,["components"]);return(0,n.kt)(b,g(s(s({},y),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",s({},{id:"tql2-migration"}),"TQL2 Migration"),(0,n.kt)("p",null,"This page answers the most frequently asked questions about TQL2."),(0,n.kt)("h3",s({},{id:"what-is-tql2"}),"What is TQL2?"),(0,n.kt)("p",null,"TQL2 is the next generation of the Tenzir Query Language for writing pipelines."),(0,n.kt)("h3",s({},{id:"how-do-i-use-tql2"}),"How do I use TQL2?"),(0,n.kt)("p",null,"Start your pipeline with a ",(0,n.kt)("inlineCode",{parentName:"p"},"// tql2")," comment to opt into using the new language.\nThis is supported for Tenzir v4.19 or newer."),(0,n.kt)("h3",s({},{id:"why-create-an-all-new-language"}),"Why create an all-new language?"),(0,n.kt)("p",null,"TQL1 has grown historically. Over time, we identified the following shortcomings\nthat TQL2 fixes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Lack of composable expressions, in particular functions and arithmetic\noperations."),(0,n.kt)("li",{parentName:"ul"},"Absence of nested pipelines, which was partially worked around with\noperator modifiers."),(0,n.kt)("li",{parentName:"ul"},"Context-dependent grammar for operators that was unintuitive for users, and\nclose to impossible to parse and syntax-highlight."),(0,n.kt)("li",{parentName:"ul"},"Inability to define constants with ",(0,n.kt)("inlineCode",{parentName:"li"},"let"),", and also soon types, functions, and\ncustom operators within the pipeline definition directly."),(0,n.kt)("li",{parentName:"ul"},"Lack of control flow within a pipeline like ",(0,n.kt)("inlineCode",{parentName:"li"},"if { \u2026 } else { \u2026 }")," made it\nunnecessarily hard to work with your data.")),(0,n.kt)("h3",s({},{id:"can-i-mix-and-match-tql1-and-tql2"}),"Can I mix-and-match TQL1 and TQL2?"),(0,n.kt)("p",null,"Yes! The ",(0,n.kt)("inlineCode",{parentName:"p"},"legacy")," operator takes a string as an argument that is parsed as a\nTQL1 pipeline and then replaces itself with it. For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{}),'// tql2\nexport\nwhere @name == "zeek.notice"\n// The `top` operator is not yet available in TQL2, so we fall back to TQL1.\nlegacy "top msg"\n')),(0,n.kt)("h3",s({},{id:"where-can-i-find-the-tql2-reference"}),"Where can I find the TQL2 reference?"),(0,n.kt)("p",null,"Hang tight! We're in the process of writing a TQL2 reference, and aim to make it\navailable soon. Until then, you can find all available operators and functions\nin TQL2 via ",(0,n.kt)("inlineCode",{parentName:"p"},"show plugins"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{}),'show plugins\n| unroll types\n| put name, type=types\n| where "tql2" in type\n')),(0,n.kt)("h3",s({},{id:"when-should-i-upgrade"}),"When should I upgrade?"),(0,n.kt)("p",null,"We do not recommend upgrading production deployments yet, but encourage playing\nwith TQL2 to get a feel for it and to report any missing things that you may\nneed."),(0,n.kt)("h3",s({},{id:"where-can-i-give-feedback-about-tql2"}),"Where can I give feedback about TQL2?"),(0,n.kt)("p",null,"Head over to the ",(0,n.kt)("inlineCode",{parentName:"p"},"#developers")," channel in our ",(0,n.kt)("a",s({parentName:"p"},{href:"/discord"}),"community Discord"),"."),(0,n.kt)("h3",s({},{id:"what-features-does-tql2-currently-support"}),"What features does TQL2 currently support?"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:"center"}),"Status"),(0,n.kt)("th",s({parentName:"tr"},{align:"left"}),"Explanation"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"(mostly) complete")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"in progress")))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",s({parentName:"tr"},{align:"right"}),"Feature"),(0,n.kt)("th",s({parentName:"tr"},{align:"left"}),"Example"),(0,n.kt)("th",s({parentName:"tr"},{align:"center"}),"Status"),(0,n.kt)("th",s({parentName:"tr"},{align:"left"}),"Comments"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Simple assignment"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'conn.test = "done"')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"Insert-or-replace semantics")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Statement separation"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"newline or ",(0,n.kt)("code",null,"|")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Dynamic field names"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"object[expr]")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Arbitrary field names"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'this["@!?$#"]')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Conditionals"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"if foo == 42 {...} else {...}")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Pattern matching"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'match proto { "UDP" => ..., "TCP" => ... }')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"High performance"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"})),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"Columnar computation engine")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Object expression"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"{ foo: 1, bar.baz.qux: 2 }")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"Field names can also be strings")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"List expression"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"[1, 2, null, 4]")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Functions/methods"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'foo(bar) && baz.starts_with("bar")')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Named arguments"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"foo.bar(baz=1, qux=2)")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Arithmetic operators"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"a + b / c < d - e")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"Also works with durations, etc.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Event metadata"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'where @name == "something"')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Constant bindings"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("code",null,"let $bad_ip = 1.2.3.4 ","|"," search $bad_ip")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Domain types"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"src in 255.0.0.0/24 && duration > 2min")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"ip"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"subnet"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"duration"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"time"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"blob"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Nested pipelines"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"group protocol {...}"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"every 1h {...}")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Spread operator"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"{...foo, bar: [42, ...baz, qux]}")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),"Can expand objects and lists")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Packages"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"my_package::my_function(foo)")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"OCSF functionality"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"ocsf::validate"),", ",(0,n.kt)("inlineCode",{parentName:"td"},"ocsf::class_uid")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Type definitions"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"type flow = {src: ip, dst: ip}")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Escape hatches"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("code",null,'python "..." ',"|",' js "..."')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Secrets"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},'secret("MY_SECRET")')),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Function definitions"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"fn my_function(...) { ... }")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\ud83d\udd27"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",s({parentName:"tr"},{align:"right"}),"Multi-stage parsing"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}),(0,n.kt)("inlineCode",{parentName:"td"},"msg.parse_json().content.parse_cef()")),(0,n.kt)("td",s({parentName:"tr"},{align:"center"}),"\u2705"),(0,n.kt)("td",s({parentName:"tr"},{align:"left"}))))))}w.isMDXComponent=!0}}]);